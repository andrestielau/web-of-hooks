// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package serve

import (
	"woh/package/actor"
	"woh/package/actor/sql/pgx"
	"woh/package/actor/third/gps"
	"woh/package/actor/third/gps/sub"
	"woh/webhooks/adapt/cron"
	"woh/webhooks/adapt/grpc"
	"woh/webhooks/adapt/http"
	"woh/webhooks/adapt/subs"
	"woh/webhooks/provide/repo"
	"woh/webhooks/provide/secrets"
)

// Injectors from wire.go:

func Adapters() actor.Actors {
	options := pgx.ProvideOptions()
	provider := repo.New(options)
	secretsProvider := secrets.New()
	handler := &http.Handler{
		Repo:    provider,
		Secrets: secretsProvider,
	}
	httpOptions := http.Options{
		Handler: handler,
	}
	adapter := http.New(httpOptions)
	grpcHandler := &grpc.Handler{
		Repo:    provider,
		Secrets: secretsProvider,
	}
	grpcOptions := grpc.Options{
		Handler: grpcHandler,
	}
	grpcAdapter := grpc.New(grpcOptions)
	subsHandler := &subs.Handler{
		Repo:    provider,
		Secrets: secretsProvider,
	}
	subscriberConfig := sub.ProvideOptions()
	loggerAdapter := gps.ProvideLogger()
	subOptions := sub.Options{
		Config: subscriberConfig,
		Logger: loggerAdapter,
	}
	subsOptions := subs.Options{
		Handler: subsHandler,
		Options: subOptions,
	}
	subsAdapter := subs.New(subsOptions)
	cronHandler := &cron.Handler{
		Repo:    provider,
		Secrets: secretsProvider,
	}
	cronOptions := cron.Options{
		Handler: cronHandler,
	}
	cronAdapter := cron.New(cronOptions)
	actors := ChooseAdapters(adapter, grpcAdapter, subsAdapter, cronAdapter)
	return actors
}
