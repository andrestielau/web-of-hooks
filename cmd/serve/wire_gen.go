// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package serve

import (
	"github.com/andrestielau/web-of-hooks/internal/domain/manager"
	"github.com/andrestielau/web-of-hooks/internal/provide/repo"
	"github.com/andrestielau/web-of-hooks/internal/provide/secrets"
	"github.com/andrestielau/web-of-hooks/package/actor"
	"github.com/andrestielau/web-of-hooks/package/actor/sql/pgx"
	"github.com/andrestielau/web-of-hooks/package/actor/third/gps"
	"github.com/andrestielau/web-of-hooks/package/actor/third/gps/sub"
	"github.com/andrestielau/web-of-hooks/webhooks/grpc"
	"github.com/andrestielau/web-of-hooks/webhooks/http"
	"github.com/andrestielau/web-of-hooks/webhooks/subs"
)

// Injectors from wire.go:

func Adapters() actor.Actors {
	provider := secrets.New()
	options := pgx.ProvideOptions()
	repoProvider := repo.New(options)
	service := manager.New(provider, repoProvider)
	adapter := http.New(service)
	grpcAdapter := grpc.New(service)
	subscriberConfig := sub.ProvideOptions()
	loggerAdapter := gps.ProvideLogger()
	subOptions := sub.Options{
		Config: subscriberConfig,
		Logger: loggerAdapter,
	}
	subsAdapter := subs.New(service, subOptions)
	actors := ChooseAdapters(adapter, grpcAdapter, subsAdapter)
	return actors
}
