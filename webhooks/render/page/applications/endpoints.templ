package applications

import (
    . "woh/webhooks/render/style"
    "woh/webhooks/render/layout"
	"woh/webhooks"
)

type EndpointsViewModel struct {
    ApplicationId string
    Data []webhooks.Endpoint
}

templ Endpoints(vm EndpointsViewModel, err error) {
    @layout.Html(){
        @layout.Shell(nil) {
            <h1 class={C("capitalize")}>endpoints</h1>
            @EndpointList(vm.ApplicationId, vm.Data)
            @EndpointForm(vm.ApplicationId)
            if err != nil {
                @EndpointsError(err)
            }
        }
    }
}

templ EndpointsError(err error) {
    <h1>An error has occured</h1>
    <p>{err.Error()}</p>
} 

templ EndpointItems(appId string, endpoints []webhooks.Endpoint) {
    for _, e := range endpoints {
        <li id={"endpoint-item-"+e.Uid}>
            <a href={templ.SafeURL("/applications/"+ appId+"/endpoints/"+e.Uid)}>{e.Uid}: {e.Url}</a>
        </li>
    }
}
// TODO: map to generic input before calling
templ EndpointList(appId string, data []webhooks.Endpoint) {
    if len(data) == 0 {
        <h2 id="endpoint-list">No Endpoint was found</h2>
    } else {
        <ul id="endpoint-list">
            @EndpointItems(appId, data)
        </ul>
    }
}
templ EndpointForm(applicationId string) {
    <form 
    id="endpoint-form"
    hx-swap="beforeend"
    hx-target="#endpoint-list"
    hx-headers={`{"Accept": "text/html"}`}
    hx-post={"/applications/"+applicationId+"/endpoints"}
    hx-on::after-request="this.reset()">
        <label for="name">Name</label>
        <input id="name" name="name" type="text"/><br></br>
        <label for="url">Url</label>
        <input id="url" name="url" type="text"/><br></br>

        <input type="checkbox" id="kyc" name="filterTypes" value="KYC-Event" />
        <label for="kyc"> KYC Events</label><br></br>
        <input type="checkbox" id="attributions" name="filterTypes" value="Pending-Attribution" />
        <label for="attributions"> Pending Attributions</label><br></br>
        <input type="checkbox" id="transactions" name="filterTypes" value="Transaction-Event" />
        <label for="transactions"> Transaction Events</label><br></br>

        <button type="reset">Reset</button>
        <button type="submit">Create</button>
    </form>
}
