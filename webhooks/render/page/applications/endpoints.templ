package applications

import (
	"woh/webhooks/provide/repo/queries"
    . "woh/webhooks/render/style"
    "woh/webhooks/render/layout"
)

type EndpointsViewModel struct {
    ApplicationId string
    Data []queries.ListEndpointsRow
}

templ Endpoints(vm EndpointsViewModel, err error) {
    @layout.Html(nil) {
        @layout.Shell(nil) {
            <h1 class={C("capitalize")}>endpoints</h1>
            @EndpointList(vm.Data)
            @EndpointForm(vm.ApplicationId)
            if err != nil {
                @EndpointsError(err)
            }
        }
    }
}

templ EndpointsError(err error) {
    <h1>An error has occured</h1>
    <p>{err.Error()}</p>
} 

templ EndpointItem(id, url string) {
    <li>{id}: {url}</li>
}
// TODO: map to generic input before calling
templ EndpointList(data []queries.ListEndpointsRow) {
    if len(data) == 0 {
        <h2>No Endpoint was found</h2>
    } else {
        <ul>
        for _, endpoint := range data {
            @EndpointItem(endpoint.Uid, endpoint.Url)
        }
        </ul>
    }
}

templ EndpointInput() {
    <div>
        <label for="url.0">Url</label>
        <input id="url.0" />
    </div>
}

script AddEndpoint() {
    var templ = document.getElementById("endpoint-form-item")
    var clone = templ.content.cloneNode(true)
    document.getElementById("endpoint-form").appendChild(clone)
}

templ EndpointForm(applicationId string) {
    <form action={templ.SafeURL("/applications/"+applicationId+"/endpoints")} method="POST" id="endpoint-form">
        @EndpointInput()
        <button type="button" onclick={AddEndpoint()}>Add</button>
        <button type="reset">Reset</button>
        <button type="submit">Create</button>
    </form>
    <template id="endpoint-form-item">
        @EndpointInput()
    </template>
}